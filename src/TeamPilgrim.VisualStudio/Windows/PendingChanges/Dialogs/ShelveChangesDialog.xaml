<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:Converters="clr-namespace:JustAProgrammer.TeamPilgrim.VisualStudio.Common.Converters" 
        xmlns:System="clr-namespace:System;assembly=mscorlib" 
        xmlns:Enums="clr-namespace:JustAProgrammer.TeamPilgrim.VisualStudio.Common.Enums" 
        xmlns:AttachedProperties="clr-namespace:JustAProgrammer.TeamPilgrim.VisualStudio.Common.AttachedProperties"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
        xmlns:PendingChanges="clr-namespace:JustAProgrammer.TeamPilgrim.VisualStudio.Model.PendingChanges" 
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        xmlns:VersionControlClient="clr-namespace:Microsoft.TeamFoundation.VersionControl.Client;assembly=Microsoft.TeamFoundation.VersionControl.Client"
        xmlns:ShelveChanges="clr-namespace:JustAProgrammer.TeamPilgrim.VisualStudio.Model.ShelveChanges"
        xmlns:listViewLayout="clr-namespace:Itenso.Windows.Controls.ListViewLayout;assembly=Itenso.Windows.Controls.ListViewLayout"
        mc:Ignorable="d" 
        x:Class="JustAProgrammer.TeamPilgrim.VisualStudio.Windows.PendingChanges.Dialogs.ShelveChangesDialog"
        Title="Team Pilgrim Shelve Changes" MinHeight="405" Width="761" MinWidth="400"
    
        x:Name="ShelveChangesDialogWindow"
        d:DataContext="{d:DesignInstance ShelveChanges:ShelvesetServiceModel}">
    <Window.Resources>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
        <Converters:SingleObjectToObservableCollectionConverter x:Key="SingleObjectToListConverter" />
        <Converters:AndClauseBooleanConverter x:Key="AndClauseBooleanConverter" />

        <ObjectDataProvider x:Key="WorkItemCheckinActions" MethodName="GetValues" ObjectType="{x:Type System:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="Enums:SelectedWorkItemCheckinActionEnum"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>

    </Window.Resources>
    <DockPanel>
        <DockPanel.Resources>
            <Style TargetType="ToolBar">
                <Setter Property="ToolBarTray.IsLocked" Value="True"/>
                <Setter Property="OverflowMode" Value="AsNeeded"/>
            </Style>
        </DockPanel.Resources>
        <TextBlock DockPanel.Dock="Top" Text="Shelveset name:" />
        <TextBox DockPanel.Dock="Top" Text="{Binding ShelvesetName, UpdateSourceTrigger=PropertyChanged}"/>
        <DockPanel DockPanel.Dock="Bottom" LastChildFill="False">
            <DockPanel DockPanel.Dock="Left">
                <DockPanel DockPanel.Dock="Top">
                    <CheckBox IsChecked="{Binding PreservePendingChangesLocally}" />
                    <TextBlock><Run Text="Preserve pending changes locally"/></TextBlock>
                </DockPanel>
                <DockPanel DockPanel.Dock="Top">
                    <CheckBox IsChecked="{Binding EvaluatePoliciesAndCheckinNotes}" />
                    <TextBlock><Run Text="Evaluate policies and check-in notes before shelving"/></TextBlock>
                </DockPanel>
            </DockPanel>
            <DockPanel DockPanel.Dock="Right" LastChildFill="False">
                <Button VerticalAlignment="Center" Content="Shelve" Command="{Binding ShelveCommand}"/>
                <Button VerticalAlignment="Center" Content="Cancel" Command="{Binding CancelCommand}"/>
            </DockPanel>
        </DockPanel>
        <DockPanel DockPanel.Dock="Top" >
            <ToolBar>
                <ToolBar.Resources>

                    <TransformGroup x:Key="ButtonImageTransform">
                        <ScaleTransform/>
                        <SkewTransform/>
                        <RotateTransform Angle="-90"/>
                        <TranslateTransform/>
                    </TransformGroup>

                    <Style TargetType="{x:Type Image}" x:Key="ButtonImageStyle">
                        <Setter Property="RenderTransformOrigin" Value="0.5,0.5" />
                        <Setter Property="RenderTransform" Value="{StaticResource ResourceKey=ButtonImageTransform}" />
                    </Style>
                </ToolBar.Resources>

                <ToolBar.LayoutTransform>
                    <RotateTransform Angle="90" />
                </ToolBar.LayoutTransform>

                <RadioButton IsChecked="True" x:Name="SourceFilesRadioButton" Style="{StaticResource {x:Type ToggleButton}}" GroupName="PendingChangesMainView">
                    <Image Source="..\..\..\Resources\page_white_text.png" Width="32" Height="32" Style="{StaticResource ButtonImageStyle}" />
                </RadioButton>

                <RadioButton x:Name="WorkItemsRadioButton" Style="{StaticResource {x:Type ToggleButton}}" GroupName="PendingChangesMainView">
                    <Image Source="..\..\..\Resources\clipboard_sign.png" Width="32" Height="32" Style="{StaticResource ButtonImageStyle}" />
                </RadioButton>

                <RadioButton x:Name="CheckInNotesRadioButton" Style="{StaticResource {x:Type ToggleButton}}" GroupName="PendingChangesMainView">
                    <Image Source="..\..\..\Resources\note.png" Width="32" Height="32" Style="{StaticResource ButtonImageStyle}" />
                </RadioButton>

                <RadioButton x:Name="PolicyWarningsRadioButton" Style="{StaticResource {x:Type ToggleButton}}" GroupName="PendingChangesMainView" Visibility="{Binding EvaluatePoliciesAndCheckinNotes, Converter={StaticResource BooleanToVisibilityConverter}}">
                    <Image Source="..\..\..\Resources\page_white_delete.png" Width="32" Height="32" Style="{StaticResource ButtonImageStyle}" />
                </RadioButton>
            </ToolBar>

            <TabControl DockPanel.Dock="Right">
                    <TabControl.Resources>
                        <!--http://stackoverflow.com/questions/6278720/wpf-toggle-panel-visibility-->
                        <Style TargetType="{x:Type TabItem}">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type TabItem}"/>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </TabControl.Resources>

                    <TabItem x:Name="SourceFilesTabItem" IsSelected="{Binding IsChecked, ElementName=SourceFilesRadioButton}">
                        <DockPanel>
                            <ToolBar DockPanel.Dock="Top">
                                <!--
                                <ToggleButton IsEnabled="False" Content="Comments"/>

                                <Separator/>
                                
                                <RadioButton  IsEnabled="False" x:Name="CheckinFolderViewRadioButton" Style="{StaticResource {x:Type ToggleButton}}" GroupName="CheckinPendingChangesViewStyle">
                                    <TextBlock><Run Text="Folder"/></TextBlock>
                                </RadioButton>
                                <RadioButton  IsEnabled="False" IsChecked="True" x:Name="CheckinFlatViewRadioButton" Style="{StaticResource {x:Type ToggleButton}}" GroupName="CheckinPendingChangesViewStyle">
                                    <TextBlock><Run Text="Flat"/></TextBlock>
                                </RadioButton>

                                <Separator/>
                                Compare Button Dropdown Disabled/Needs Implementing
                
                                <Button>Cmp with Unmodified</Button>
                                <Button>Cmp with Workspace</Button>
                                <Button>Cmp with Latest</Button>
                                    -->

                                <ToggleButton IsEnabled="{Binding Path=SolutionIsOpen}" IsChecked="{Binding Path=FilterSolution}">Filter Solution</ToggleButton>

                                <Separator/>

                                <Button Content="Undo Pending Change"
                                            Command="{Binding Path=UndoPendingChangeCommand}" 
                                            CommandParameter="{Binding ElementName=PendingChangesListView, Path=SelectedItems}" />

                            </ToolBar>
                            <TextBlock DockPanel.Dock="Top"><Run Text="Comment:"/></TextBlock>
                            <TextBox DockPanel.Dock="Top" Text="{Binding Comment, UpdateSourceTrigger=PropertyChanged}"/>

                            <ListView x:Name="PendingChangesListView" 
                					AttachedProperties:PreviewSpaceKeyDownSelectPendingChanges.Command="{Binding Path=SelectPendingChangesCommand}"
                                    
                                    listViewLayout:ListViewLayoutManager.Enabled="true"

                                    IsSynchronizedWithCurrentItem="True"
                                    AttachedProperties:GridViewSort.AutoSort="True"
                                      
                                    ItemsSource="{Binding Path=PendingChanges}">

                                <ListView.ItemContainerStyle>
                                    <Style TargetType="{x:Type ListViewItem}">
                                    </Style>
                                </ListView.ItemContainerStyle>
                                <ListView.ContextMenu>
                                    <ContextMenu d:DataContext="{d:DesignInstance {x:Type ShelveChanges:ShelvesetServiceModel}}" x:Name="PendingChangesContextMenu">

                                        <MenuItem Header="View"/>

                                        <Separator />
                                        <MenuItem Header="Compare">

                                            <MenuItem Header="With workspace version..." />

                                            <MenuItem Header="With latest version..." />

                                        </MenuItem>

                                        <MenuItem Header="Undo" />

                                    </ContextMenu>
                                </ListView.ContextMenu>
                                <ListView.View>
                                    <GridView>
                                        <GridViewColumn Header="File" Width="200"
                                                listViewLayout:RangeColumn.MinWidth="150"
                                                AttachedProperties:GridViewSort.PropertyName="Change.FileName">
                                            
                                            <GridViewColumn.CellTemplate>
                                                <DataTemplate DataType="PendingChanges:PendingChangeModel">
                                                    <DockPanel>
                                                        <CheckBox DockPanel.Dock="Left"
                												DataContext="{Binding}"
                												IsChecked="{Binding IncludeChange}" 
                												Click="PendingChangesCheckboxClicked"/>
                                                        <TextBlock Text="{Binding Change.FileName, Mode=OneWay}" DockPanel.Dock="Right"/>
                                                    </DockPanel>
                                                </DataTemplate>
                                            </GridViewColumn.CellTemplate>
                                        </GridViewColumn>

                                        <GridViewColumn Header="Change" Width="70"
                                                listViewLayout:RangeColumn.MinWidth="50"
                                                AttachedProperties:GridViewSort.PropertyName="Change.ChangeTypeName">
                                            
                                            <GridViewColumn.CellTemplate>
                                                <DataTemplate DataType="PendingChanges:PendingChangeModel">
                                                    <TextBlock Text="{Binding Change.ChangeTypeName, Mode=OneWay}"/>
                                                </DataTemplate>
                                            </GridViewColumn.CellTemplate>
                                        </GridViewColumn>

                                        <GridViewColumn Header="Folder" Width="200"
                                                listViewLayout:RangeColumn.MinWidth="200"
                                                listViewLayout:RangeColumn.IsFillColumn="true"
                                                AttachedProperties:GridViewSort.PropertyName="Change.LocalOrServerFolder">
                                            
                                            <GridViewColumn.CellTemplate>
                                                <DataTemplate DataType="PendingChanges:PendingChangeModel">
                                                    <TextBlock Text="{Binding Change.LocalOrServerFolder, Mode=OneWay}"/>
                                                </DataTemplate>
                                            </GridViewColumn.CellTemplate>
                                        </GridViewColumn>
                                    </GridView>
                                </ListView.View>
                            </ListView>
                        </DockPanel>
                    </TabItem>
                    <TabItem x:Name="WorkItemsTabItem" IsSelected="{Binding IsChecked, ElementName=WorkItemsRadioButton}">
                        <DockPanel>
                            <ToolBar DockPanel.Dock="Top">
                                <TextBlock><Run Text="Query:"/></TextBlock>

                                <ComboBox Width="200" 
                                      DisplayMemberPath="Formatted"
                                      ItemsSource="{Binding Path=PreviouslySelectedWorkItemQueries}"
                                      SelectedItem="{Binding Path=CurrentPreviouslySelectedWorkItemQuery}"
                                  
                                      IsEditable="False"></ComboBox>

                            <Button Content="..." Command="{Binding Path=ShowSelectWorkItemQueryCommand}"/>

                                <Separator/>

                                <Button>
                                    <Image Source="/TeamPilgrim.VisualStudio;component/Resources/arrow_refresh.png" Width="16" Height="16" />
                                </Button>
                            </ToolBar>

                        <ListView x:Name="WorkItemsListView" DockPanel.Dock="Bottom" 
                              AttachedProperties:PreviewSpaceKeyDownSelectWorkItems.Command="{Binding Path=SelectWorkItemsCommand}"
                              ItemsSource="{Binding Path=WorkItems}">

                            <ListView.ItemContainerStyle>
                                    <Style TargetType="{x:Type ListViewItem}">
                                    </Style>
                                </ListView.ItemContainerStyle>

                                <ListView.View>
                                    <GridView>
                                        <GridViewColumn>
                                            <GridViewColumn.CellTemplate>
                                                <DataTemplate DataType="PendingChanges:WorkItemModel">
                                                    <CheckBox IsChecked="{Binding IsSelected}"
                											DataContext="{Binding}"
                											Click="PendingChangeWorkItemCheckboxClicked" />
                                                </DataTemplate>
                                            </GridViewColumn.CellTemplate>
                                        </GridViewColumn>

                                        <GridViewColumn Header="Check-in Action">
                                            <GridViewColumn.CellTemplate>
                                                <DataTemplate DataType="PendingChanges:WorkItemModel">
                                                    <ComboBox 
                											Visibility="{Binding IsSelected, Converter={StaticResource ResourceKey=BooleanToVisibilityConverter}}"
                											ItemsSource="{Binding Source={StaticResource ResourceKey=WorkItemCheckinActions}}" 
                											SelectedItem="{Binding WorkItemCheckinAction}" />
                                                </DataTemplate>
                                            </GridViewColumn.CellTemplate>
                                        </GridViewColumn>

                                        <GridViewColumn Header="ID">
                                            <GridViewColumn.CellTemplate>
                                                <DataTemplate DataType="PendingChanges:WorkItemModel">
                                                    <TextBlock Text="{Binding WorkItem.Id, Mode=OneWay}"/>
                                                </DataTemplate>
                                            </GridViewColumn.CellTemplate>
                                        </GridViewColumn>

                                        <GridViewColumn Header="Type">
                                            <GridViewColumn.CellTemplate>
                                                <DataTemplate DataType="PendingChanges:WorkItemModel">
                                                    <TextBlock Text="{Binding WorkItem.Type.Name, Mode=OneWay}"/>
                                                </DataTemplate>
                                            </GridViewColumn.CellTemplate>
                                        </GridViewColumn>

                                        <GridViewColumn Header="Title">
                                            <GridViewColumn.CellTemplate>
                                                <DataTemplate DataType="PendingChanges:WorkItemModel">
                                                    <TextBlock Text="{Binding WorkItem.Title, Mode=OneWay}"/>
                                                </DataTemplate>
                                            </GridViewColumn.CellTemplate>
                                        </GridViewColumn>
                                    </GridView>
                                </ListView.View>
                            </ListView>
                        </DockPanel>
                    </TabItem>
                    <TabItem x:Name="CheckInNotesTabItem"  IsSelected="{Binding IsChecked, ElementName=CheckInNotesRadioButton}">
                        <ListView DockPanel.Dock="Bottom"  ItemsSource="{Binding Path=CheckinNotes}" HorizontalContentAlignment="Stretch">
                            <ListView.ItemTemplate>
                                <DataTemplate DataType="PendingChanges:CheckinNoteModel">
                                    <Expander Header="{Binding CheckinNoteFieldDefinition.Name}" IsExpanded="True">
                                        <xctk:WatermarkTextBox Text="{Binding Value, UpdateSourceTrigger=PropertyChanged}">
                                            <xctk:WatermarkTextBox.Style>
                                                <Style TargetType="{x:Type xctk:WatermarkTextBox}">
                                                    <Style.Triggers>
                                                        <DataTrigger Value="True">
                                                            <DataTrigger.Binding>
                                                                <MultiBinding Converter="{StaticResource AndClauseBooleanConverter}">
                                                                    <Binding ElementName="ShelveChangesDialogWindow" Path="DataContext.EvaluatePoliciesAndCheckinNotes" />
                                                                    <Binding Path="CheckinNoteFieldDefinition.Required" />
                                                                </MultiBinding>
                                                            </DataTrigger.Binding>
                                                            <Setter Property="Watermark" Value="&lt;Required&gt;" />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </xctk:WatermarkTextBox.Style>
                                        </xctk:WatermarkTextBox>
                                    </Expander>
                                </DataTemplate>
                            </ListView.ItemTemplate>
                        </ListView>
                    </TabItem>
                <TabItem x:Name="PolicyWarningsTabItem" IsSelected="{Binding IsChecked, ElementName=PolicyWarningsRadioButton}">
                    <ListView DataContext="{Binding Path=CheckinEvaluationResult}" ItemsSource="{Binding Path=PolicyFailures}">
                        <ListView.View>
                            <GridView>
                                <GridViewColumn Header="Description">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate DataType="VersionControlClient:PolicyFailure">
                                            <TextBlock Text="{Binding Message}"/>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                            </GridView>
                        </ListView.View>
                    </ListView>
                </TabItem>
            </TabControl>

        </DockPanel>

    </DockPanel>
</Window>
