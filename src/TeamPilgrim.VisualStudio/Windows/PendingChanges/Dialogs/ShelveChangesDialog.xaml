<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:converters="clr-namespace:JustAProgrammer.TeamPilgrim.VisualStudio.Common.Converters" 
        xmlns:system="clr-namespace:System;assembly=mscorlib" 
        xmlns:enums="clr-namespace:JustAProgrammer.TeamPilgrim.VisualStudio.Common.Enums" 
        xmlns:attachedProperties="clr-namespace:JustAProgrammer.TeamPilgrim.VisualStudio.Common.AttachedProperties"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        xmlns:versionControlClient="clr-namespace:Microsoft.TeamFoundation.VersionControl.Client;assembly=Microsoft.TeamFoundation.VersionControl.Client"
        xmlns:listViewLayout="clr-namespace:Itenso.Windows.Controls.ListViewLayout;assembly=Itenso.Windows.Controls.ListViewLayout"
        xmlns:controls="clr-namespace:JustAProgrammer.TeamPilgrim.VisualStudio.Common.Controls"
        xmlns:workItemQuery="clr-namespace:JustAProgrammer.TeamPilgrim.VisualStudio.Model.WorkItemQuery"
        xmlns:versionControl="clr-namespace:JustAProgrammer.TeamPilgrim.VisualStudio.Model.VersionControl"
        mc:Ignorable="d" 
        x:Class="JustAProgrammer.TeamPilgrim.VisualStudio.Windows.PendingChanges.Dialogs.ShelveChangesDialog"
        Title="Team Pilgrim Shelve Changes" MinHeight="405" Width="761" MinWidth="400"
    
        x:Name="ShelveChangesDialogWindow"
        d:DataContext="{d:DesignInstance versionControl:ShelvesetServiceModel}">
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/TeamPilgrim.VisualStudio;component/Windows\ResourceDictionary.xaml"/>
            </ResourceDictionary.MergedDictionaries>

            <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
            <converters:SelectedPendingChangesSummaryEnumIsCheckedBooleanConverter x:Key="SelectedPendingChangesSummaryEnumIsCheckedBooleanConverter" />
            <converters:AndClauseBooleanConverter x:Key="AndClauseBooleanConverter" />

            <ObjectDataProvider x:Key="WorkItemCheckinActions" MethodName="GetValues" ObjectType="{x:Type system:Enum}">
                <ObjectDataProvider.MethodParameters>
                    <x:Type TypeName="enums:SelectedWorkItemCheckinActionEnum"/>
                </ObjectDataProvider.MethodParameters>
            </ObjectDataProvider>

            <Style TargetType="ToolBar">
                <Setter Property="ToolBarTray.IsLocked" Value="True"/>
                <Setter Property="OverflowMode" Value="AsNeeded"/>
                <Setter Property="Template" Value="{DynamicResource ToolbarTemplate}" />
            </Style>
        </ResourceDictionary>

    </Window.Resources>
    <DockPanel>
        <TextBlock DockPanel.Dock="Top" Text="Shelveset name:" />
        <TextBox DockPanel.Dock="Top" Text="{Binding ShelvesetName, UpdateSourceTrigger=PropertyChanged}"/>
        <DockPanel DockPanel.Dock="Bottom" LastChildFill="False">
            <DockPanel DockPanel.Dock="Left">
                <DockPanel DockPanel.Dock="Top">
                    <CheckBox IsChecked="{Binding PreservePendingChangesLocally}" />
                    <TextBlock><Run Text="Preserve pending changes locally"/></TextBlock>
                </DockPanel>
                <DockPanel DockPanel.Dock="Top">
                    <CheckBox IsChecked="{Binding EvaluatePoliciesAndCheckinNotes}" />
                    <TextBlock><Run Text="Evaluate policies and check-in notes before shelving"/></TextBlock>
                </DockPanel>
            </DockPanel>
            <DockPanel DockPanel.Dock="Right" LastChildFill="False">
                <Button VerticalAlignment="Center" Content="Shelve" Command="{Binding ShelveCommand}"/>
                <Button VerticalAlignment="Center" Content="Cancel" Command="{Binding CancelCommand}"/>
            </DockPanel>
        </DockPanel>
        <DockPanel DockPanel.Dock="Top" >
            <ToolBarTray Orientation="Vertical" DockPanel.Dock="Left">
                <ToolBar>
                    <ToolBar.Resources>
                        <Style x:Key="ToggleButtonType" TargetType="{x:Type ToggleButton}" />
                    </ToolBar.Resources>
                    <RadioButton IsChecked="True" x:Name="SourceFilesRadioButton" Style="{StaticResource ToggleButtonType}" GroupName="PendingChangesMainView">
                        <Image Source="/TeamPilgrim.VisualStudio;component/Resources\Textfile_818_32x.png" Width="32" Height="32" />
                    </RadioButton>

                    <RadioButton x:Name="WorkItemsRadioButton" Style="{StaticResource ToggleButtonType}" GroupName="PendingChangesMainView">
                        <Image Source="..\..\..\Resources\clipboard_sign.png" Width="32" Height="32" />
                    </RadioButton>

                    <RadioButton x:Name="CheckInNotesRadioButton" Style="{StaticResource ToggleButtonType}" GroupName="PendingChangesMainView">
                        <Image Source="..\..\..\Resources\note.png" Width="32" Height="32" />
                    </RadioButton>

                    <RadioButton x:Name="PolicyWarningsRadioButton" Style="{StaticResource ToggleButtonType}" GroupName="PendingChangesMainView" Visibility="{Binding EvaluatePoliciesAndCheckinNotes, Converter={StaticResource BooleanToVisibilityConverter}}">
                        <Image Source="/TeamPilgrim.VisualStudio;component/Resources\PolicyWarnings(large)_7879.png" Width="32" Height="32" />
                    </RadioButton>
                </ToolBar>
            </ToolBarTray>
            <TabControl DockPanel.Dock="Right">
                <TabControl.Resources>
                    <!--http://stackoverflow.com/questions/6278720/wpf-toggle-panel-visibility-->
                    <Style TargetType="{x:Type TabItem}">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type TabItem}"/>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </TabControl.Resources>

                <TabItem x:Name="SourceFilesTabItem" IsSelected="{Binding IsChecked, ElementName=SourceFilesRadioButton}">
                    <DockPanel>
                        <ToolBarTray DockPanel.Dock="Top">
                            <ToolBar>
                                <!--
                                    <ToggleButton IsEnabled="False" Content="Comments"/>

                                    <Separator/>
                                
                                    <RadioButton  IsEnabled="False" x:Name="CheckinFolderViewRadioButton" Style="{StaticResource ToggleButtonType}" GroupName="CheckinPendingChangesViewStyle">
                                        <TextBlock><Run Text="Folder"/></TextBlock>
                                    </RadioButton>
                                    <RadioButton  IsEnabled="False" IsChecked="True" x:Name="CheckinFlatViewRadioButton" Style="{StaticResource ToggleButtonType}" GroupName="CheckinPendingChangesViewStyle">
                                        <TextBlock><Run Text="Flat"/></TextBlock>
                                    </RadioButton>

                                    <Separator/>
                                    Compare Button Dropdown Disabled/Needs Implementing
                
                                    <Button>Cmp with Unmodified</Button>
                                    <Button>Cmp with Workspace</Button>
                                    <Button>Cmp with Latest</Button>
                                        -->

                                <ToggleButton 
                                            ToolTip="Filter by Solution"
                                            IsEnabled="{Binding Path=SolutionIsOpen}" 
                                            IsChecked="{Binding Path=FilterSolution}">
                                    <Image Source="/TeamPilgrim.VisualStudio;component/Resources\Solution_8308.png" Width="16" Height="16"></Image>
                                </ToggleButton>

                                <Separator/>

                                <Button 
                                            ToolTip="Undo pending changes"
                                            Command="{Binding Path=UndoPendingChangeCommand}" 
                                            CommandParameter="{Binding ElementName=PendingChangesListView, Path=SelectedItems}">
                                    <Image Source="/TeamPilgrim.VisualStudio;component/Resources\Arrow_UndoRevertRestore_16xLG.png" Width="16" Height="16"></Image>
                                </Button>

                            </ToolBar>
                        </ToolBarTray>
                        <TextBlock DockPanel.Dock="Top"><Run Text="Comment:"/></TextBlock>
                        <TextBox DockPanel.Dock="Top" Text="{Binding Comment, UpdateSourceTrigger=PropertyChanged}"/>

                        <ListView x:Name="PendingChangesListView" 
                                    VirtualizingStackPanel.IsVirtualizing="True"
                                    VirtualizingStackPanel.VirtualizationMode="Recycling"
                                  
                					attachedProperties:PreviewSpaceKeyDownSelectPendingChanges.Command="{Binding Path=SelectPendingChangesCommand}"
                                    
                                    listViewLayout:ListViewLayoutManager.Enabled="true"

                                    attachedProperties:GridViewSort.AutoSort="True"
                                      
                                    ItemsSource="{Binding Path=PendingChanges}">

                            <ListView.ItemContainerStyle>
                                <Style TargetType="{x:Type ListViewItem}">
                                </Style>
                            </ListView.ItemContainerStyle>
                            <ListView.ContextMenu>
                                <ContextMenu d:DataContext="{d:DesignInstance {x:Type versionControl:ShelvesetServiceModel}}" x:Name="PendingChangesContextMenu">

                                    <MenuItem Header="View"/>

                                    <Separator />
                                    <MenuItem Header="Compare">

                                        <MenuItem Header="With workspace version..." />

                                        <MenuItem Header="With latest version..." />

                                    </MenuItem>

                                    <MenuItem Header="Undo" />

                                </ContextMenu>
                            </ListView.ContextMenu>
                            <ListView.View>
                                <GridView>
                                    <GridViewColumn listViewLayout:FixedColumn.Width="20" >
                                        <GridViewColumn.Header>
                                            <controls:CustomCheckBox
                                            x:Name="PendingChangesAllCheckbox"
                                            IsThreeState="true"
                                            IsChecked="{Binding Path=PendingChangesSummary, Converter={StaticResource SelectedPendingChangesSummaryEnumIsCheckedBooleanConverter}, Mode=OneWay}"
                                            Click="PendingChangesAllCheckboxOnClick" />
                                        </GridViewColumn.Header>
                                        
                                        <GridViewColumn.CellTemplate>
                                            <DataTemplate>
                                                <CheckBox
                									DataContext="{Binding}"
                									IsChecked="{Binding IncludeChange, Mode=OneWay}" 
                									Click="PendingChangesCheckboxClicked"/>
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                    
                                    <GridViewColumn
                                                x:Name="GridViewColumnPendingChangesFileName"
                                           
                                                listViewLayout:RangeColumn.MinWidth="150"
                                                attachedProperties:GridViewSort.PropertyName="Change.FileName">

                                        <GridViewColumn.Header>
                                            <GridViewColumnHeader>File</GridViewColumnHeader>
                                        </GridViewColumn.Header>

                                        <GridViewColumn.CellTemplate>
                                            <DataTemplate DataType="versionControl:PendingChangeModel">
                                                <TextBlock Text="{Binding Change.FileName, Mode=OneWay}" DockPanel.Dock="Right"/>
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>

                                    <GridViewColumn 
                                                x:Name="GridViewColumnPendingChangesChangeTypeName"
                                                
                                                listViewLayout:RangeColumn.MinWidth="70"
                                                
                                                attachedProperties:GridViewSort.PropertyName="Change.ChangeTypeName">

                                        <GridViewColumn.Header>
                                            <GridViewColumnHeader>Change</GridViewColumnHeader>
                                        </GridViewColumn.Header>

                                        <GridViewColumn.CellTemplate>
                                            <DataTemplate DataType="versionControl:PendingChangeModel">
                                                <TextBlock Text="{Binding Change.ChangeTypeName, Mode=OneWay}"/>
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>

                                    <GridViewColumn 
                                                x:Name="GridViewColumnPendingChangesLocalOrServerFolder"
                                                        
                                                listViewLayout:RangeColumn.MinWidth="200"
                                                listViewLayout:RangeColumn.IsFillColumn="true"
                                                attachedProperties:GridViewSort.PropertyName="Change.LocalOrServerFolder">

                                        <GridViewColumn.Header>
                                            <GridViewColumnHeader>Folder</GridViewColumnHeader>
                                        </GridViewColumn.Header>

                                        <GridViewColumn.CellTemplate>
                                            <DataTemplate DataType="versionControl:PendingChangeModel">
                                                <TextBlock Text="{Binding Change.LocalOrServerFolder, Mode=OneWay}"/>
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                </GridView>
                            </ListView.View>
                        </ListView>
                    </DockPanel>
                </TabItem>
                <TabItem x:Name="WorkItemsTabItem" IsSelected="{Binding IsChecked, ElementName=WorkItemsRadioButton}">
                    <DockPanel>
                        <ToolBar DockPanel.Dock="Top">
                            <TextBlock><Run Text="Query:"/></TextBlock>

                            <ComboBox Width="200" 
                                      DisplayMemberPath="Formatted"
                                      ItemsSource="{Binding Path=PreviouslySelectedWorkItemQueries}"
                                      SelectedItem="{Binding Path=CurrentPreviouslySelectedWorkItemQuery}"
                                  
                                      IsEditable="False"></ComboBox>

                            <Button Content="..." Command="{Binding Path=ShowSelectWorkItemQueryCommand}"/>

                            <Separator/>

                            <Button>
                                <Image Source="/TeamPilgrim.VisualStudio;component/Resources/refresh_16xLG.png" Width="16" Height="16" />
                            </Button>
                        </ToolBar>

                        <ListView x:Name="WorkItemsListView" DockPanel.Dock="Bottom" 
                              VirtualizingStackPanel.IsVirtualizing="True"
                              VirtualizingStackPanel.VirtualizationMode="Recycling"
                                  
                              listViewLayout:ListViewLayoutManager.Enabled="true"
                              attachedProperties:PreviewSpaceKeyDownSelectWorkItems.Command="{Binding Path=SelectWorkItemsCommand}"
                              ItemsSource="{Binding Path=WorkItems}">

                            <ListView.ItemContainerStyle>
                                <Style TargetType="{x:Type ListViewItem}">
                                </Style>
                            </ListView.ItemContainerStyle>

                            <ListView.View>
                                <GridView>
                                    <GridViewColumn listViewLayout:FixedColumn.Width="20">
                                        <GridViewColumn.CellTemplate>
                                            <DataTemplate DataType="workItemQuery:WorkItemModel">
                                                <CheckBox IsChecked="{Binding IsSelected}"
                											DataContext="{Binding}"
                											Click="PendingChangeWorkItemCheckboxClicked" />
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>

                                    <GridViewColumn Header="Check-in Action"
                                                listViewLayout:RangeColumn.MinWidth="100" >
                                        <GridViewColumn.CellTemplate>
                                            <DataTemplate DataType="workItemQuery:WorkItemModel">
                                                <ComboBox 
                											Visibility="{Binding IsSelected, Converter={StaticResource ResourceKey=BooleanToVisibilityConverter}}"
                											ItemsSource="{Binding Source={StaticResource ResourceKey=WorkItemCheckinActions}}" 
                											SelectedItem="{Binding WorkItemCheckinAction}" />
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>

                                    <GridViewColumn Header="ID" listViewLayout:RangeColumn.MinWidth="75">
                                        <GridViewColumn.CellTemplate>
                                            <DataTemplate DataType="workItemQuery:WorkItemModel">
                                                <TextBlock Text="{Binding WorkItem.Id, Mode=OneWay}"/>
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>

                                    <GridViewColumn Header="Type" listViewLayout:RangeColumn.MinWidth="80">
                                        <GridViewColumn.CellTemplate>
                                            <DataTemplate DataType="workItemQuery:WorkItemModel">
                                                <TextBlock Text="{Binding WorkItem.Type.Name, Mode=OneWay}"/>
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>

                                    <GridViewColumn Header="Title"
                                    		listViewLayout:RangeColumn.MinWidth="80"
                                    		listViewLayout:RangeColumn.IsFillColumn="True">
                                        <GridViewColumn.CellTemplate>
                                            <DataTemplate DataType="workItemQuery:WorkItemModel">
                                                <TextBlock Text="{Binding WorkItem.Title, Mode=OneWay}"/>
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                </GridView>
                            </ListView.View>
                        </ListView>
                    </DockPanel>
                </TabItem>
                <TabItem x:Name="CheckInNotesTabItem"  IsSelected="{Binding IsChecked, ElementName=CheckInNotesRadioButton}">
                    <ListView DockPanel.Dock="Bottom"
                              HorizontalContentAlignment="Stretch"
                              
                              VirtualizingStackPanel.IsVirtualizing="True"
                              VirtualizingStackPanel.VirtualizationMode="Recycling"
                              
                              ItemsSource="{Binding Path=CheckinNotes}">
                        <ListView.ItemTemplate>
                            <DataTemplate DataType="versionControl:CheckinNoteModel">
                                <Expander Header="{Binding CheckinNoteFieldDefinition.Name}" IsExpanded="True">
                                    <xctk:WatermarkTextBox Text="{Binding Value, UpdateSourceTrigger=PropertyChanged}">
                                        <xctk:WatermarkTextBox.Style>
                                            <Style TargetType="{x:Type xctk:WatermarkTextBox}">
                                                <Style.Triggers>
                                                    <DataTrigger Value="True">
                                                        <DataTrigger.Binding>
                                                            <MultiBinding Converter="{StaticResource AndClauseBooleanConverter}">
                                                                <Binding ElementName="ShelveChangesDialogWindow" Path="DataContext.EvaluatePoliciesAndCheckinNotes" />
                                                                <Binding Path="CheckinNoteFieldDefinition.Required" />
                                                            </MultiBinding>
                                                        </DataTrigger.Binding>
                                                        <Setter Property="Watermark" Value="&lt;Required&gt;" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </xctk:WatermarkTextBox.Style>
                                    </xctk:WatermarkTextBox>
                                </Expander>
                            </DataTemplate>
                        </ListView.ItemTemplate>
                    </ListView>
                </TabItem>
                <TabItem x:Name="PolicyWarningsTabItem" IsSelected="{Binding IsChecked, ElementName=PolicyWarningsRadioButton}">
                    <ListView
                        VirtualizingStackPanel.IsVirtualizing="True"
                        VirtualizingStackPanel.VirtualizationMode="Recycling"
                        
                        DataContext="{Binding Path=CheckinEvaluationResult}" 
                        ItemsSource="{Binding Path=PolicyFailures}">
                        <ListView.View>
                            <GridView>
                                <GridViewColumn Header="Description">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate DataType="versionControlClient:PolicyFailure">
                                            <TextBlock Text="{Binding Message}"/>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                            </GridView>
                        </ListView.View>
                    </ListView>
                </TabItem>
            </TabControl>

        </DockPanel>

    </DockPanel>
</Window>
