<UserControl x:Class="JustAProgrammer.TeamPilgrim.VisualStudio.Windows.PendingChanges.PendingChangesControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:Converters="clr-namespace:JustAProgrammer.TeamPilgrim.VisualStudio.Common.Converters"
             xmlns:Model="clr-namespace:JustAProgrammer.TeamPilgrim.VisualStudio.Model"
             xmlns:VersionControlClient="clr-namespace:Microsoft.TeamFoundation.VersionControl.Client;assembly=Microsoft.TeamFoundation.VersionControl.Client"
             xmlns:PendingChangesModel="clr-namespace:JustAProgrammer.TeamPilgrim.VisualStudio.Model.PendingChanges"
             xmlns:System="clr-namespace:System;assembly=mscorlib"
             xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
             xmlns:AttachedProperties="clr-namespace:JustAProgrammer.TeamPilgrim.VisualStudio.Common.AttachedProperties"
             xmlns:Enums="clr-namespace:JustAProgrammer.TeamPilgrim.VisualStudio.Common.Enums"
             xmlns:workItemQuery="clr-namespace:JustAProgrammer.TeamPilgrim.VisualStudio.Model.WorkItemQuery"
             xmlns:listViewLayout="clr-namespace:Itenso.Windows.Controls.ListViewLayout;assembly=Itenso.Windows.Controls.ListViewLayout"
             mc:Ignorable="d" 
             Height="Auto" d:DesignHeight="300" d:DesignWidth="850"
             d:DataContext="{d:DesignInstance Model:TeamPilgrimServiceModel}">
    <UserControl.Resources>

        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
        <Converters:SingleObjectToObservableCollectionConverter x:Key="SingleObjectToListConverter" />

        <ObjectDataProvider x:Key="workItemCheckinActions" MethodName="GetValues" ObjectType="{x:Type System:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="Enums:SelectedWorkItemCheckinActionEnum"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>

        <Style TargetType="ToolBar">
            <Setter Property="ToolBarTray.IsLocked" Value="True"/>
            <Setter Property="OverflowMode" Value="AsNeeded"/>
        </Style>
        
    </UserControl.Resources>
    <DockPanel>
        <ToolBar>
            <ToolBar.LayoutTransform>
                <RotateTransform Angle="90" />
            </ToolBar.LayoutTransform>
            <ToolBar.Resources>

                <TransformGroup x:Key="ButtonImageTransform">
                    <ScaleTransform/>
                    <SkewTransform/>
                    <RotateTransform Angle="-90"/>
                    <TranslateTransform/>
                </TransformGroup>

                <Style TargetType="{x:Type Image}" x:Key="ButtonImageStyle">
                    <Setter Property="RenderTransformOrigin" Value="0.5,0.5" />
                    <Setter Property="RenderTransform" Value="{StaticResource ResourceKey=ButtonImageTransform}" />
                </Style>
            </ToolBar.Resources>

            <RadioButton IsChecked="True" x:Name="SourceFilesRadioButton" Style="{StaticResource {x:Type TypeName=ToggleButton}}" GroupName="PendingChangesMainView">
                <Image Source="..\..\Resources\page_white_text.png" Width="32" Height="32" Style="{StaticResource ButtonImageStyle}" />
            </RadioButton>

            <RadioButton x:Name="WorkItemsRadioButton" Style="{StaticResource {x:Type TypeName=ToggleButton}}" GroupName="PendingChangesMainView">
                <Image Source="..\..\Resources\clipboard_sign.png" Width="32" Height="32" Style="{StaticResource ButtonImageStyle}" />
            </RadioButton>

            <RadioButton x:Name="CheckInNotesRadioButton" Style="{StaticResource {x:Type TypeName=ToggleButton}}" GroupName="PendingChangesMainView">
                <Image Source="..\..\Resources\note.png" Width="32" Height="32" Style="{StaticResource ButtonImageStyle}" />
            </RadioButton>

            <RadioButton x:Name="PolicyWarningsRadioButton" Style="{StaticResource {x:Type TypeName=ToggleButton}}" GroupName="PendingChangesMainView">
                <Image Source="..\..\Resources\page_white_delete.png" Width="32" Height="32" Style="{StaticResource ButtonImageStyle}" />
            </RadioButton>

            <Button Command="{Binding Path=ShowResolveConflicttManagerCommand}">
                <Image Source="..\..\Resources\edit_diff.png" Width="32" Height="32" Style="{StaticResource ButtonImageStyle}" />
            </Button>
        </ToolBar>
        <TabControl DockPanel.Dock="Right" BorderThickness="0" Padding="0">
            <TabControl.Resources>
                <!--http://stackoverflow.com/questions/6278720/wpf-toggle-panel-visibility-->
                <Style TargetType="TabItem">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="TabItem">
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </TabControl.Resources>

            <TabItem x:Name="SourceFilesTabItem" IsSelected="{Binding ElementName=SourceFilesRadioButton, Path=IsChecked}">
                <DockPanel>
                    <ToolBar DockPanel.Dock="Top">
                        <Button DataContext="{Binding Path=SelectedWorkspaceModel}" Command="{Binding Path=CheckInCommand}">
                            <StackPanel Orientation="Horizontal">
                                <Image Source="../../Resources/page_save.png" Width="16" Height="16" Margin="0,0,2,0"  />
                                <TextBlock>Check In</TextBlock>
                            </StackPanel>
                        </Button>

                        <Separator/>
                        
                        <Button DataContext="{Binding Path=SelectedWorkspaceModel}" Command="{Binding ShelveCommand}">
                            <StackPanel Orientation="Horizontal">
                                <Image Source="../../Resources/shelve.png" Width="16" Height="16" Margin="0,0,2,0"  />
                                <TextBlock>Shelve</TextBlock>
                            </StackPanel>
                        </Button>
                        
                        <!--
                        <Button  DataContext="{Binding Path=SelectedWorkspaceModel}" Command="{Binding UnshelveCommand}">
                            <StackPanel Orientation="Horizontal">
                                <Image Source="../../Resources/unshelve.png" Width="16" Height="16" Margin="0,0,2,0"  />
                                <TextBlock>Unshelve</TextBlock>
                            </StackPanel>
                        </Button>
                        -->
                        
                        <Separator/>
                        <ToggleButton DataContext="{Binding Path=SelectedWorkspaceModel}" IsEnabled="{Binding Path=SolutionIsOpen}" IsChecked="{Binding Path=FilterSolution}">Filter Solution</ToggleButton>
                        
                        <Separator/>

                        <!--
                        <Separator />
                        <ToggleButton IsEnabled="False">Comments</ToggleButton>
                        
                        Compare Button Dropdown Disabled/Needs Implementing
                
                        <Button>Cmp with Unmodified</Button>
                        <Button>Cmp with Workspace</Button>
                        <Button>Cmp with Latest</Button>
                        -->

                        <Button DataContext="{Binding Path=SelectedWorkspaceModel}"
                                Command="{Binding Path=ViewPendingChangeCommand}" 
                                CommandParameter="{Binding ElementName=PendingChangesListView, Path=SelectedItems}">View File</Button>

                        <Button DataContext="{Binding Path=SelectedWorkspaceModel}"
                                Command="{Binding Path=UndoPendingChangeCommand}" 
                                CommandParameter="{Binding ElementName=PendingChangesListView, Path=SelectedItems}">Undo Pending Change</Button>

                        <Separator/>
                        
                        <Button DataContext="{Binding Path=SelectedWorkspaceModel}" Command="{Binding Path=RefreshPendingChangesCommand}">
                            <Image Source="..\..\Resources\arrow_refresh.png" Width="16" Height="16" />
                        </Button>

                        <Separator/>
                        <TextBlock VerticalAlignment="Center">Workspace:</TextBlock>
                        <ComboBox Margin="0" VerticalAlignment="Top" Width="120"
                          
                          ItemsSource="{Binding Path=WorkspaceInfoModels}"
                          SelectedValue="{Binding Path=SelectedWorkspaceInfoModel}">

                            <ComboBox.ItemTemplate>
                                <DataTemplate DataType="PendingChangesModel:WorkspaceInfoModel">
                                    <TextBlock Text="{Binding Path=WorkspaceInfo.Name}"></TextBlock>
                                </DataTemplate>
                            </ComboBox.ItemTemplate>
                        </ComboBox>

                    </ToolBar>
                    <TextBlock DockPanel.Dock="Top">Comment:</TextBlock>
                    <TextBox DockPanel.Dock="Top" DataContext="{Binding Path=SelectedWorkspaceModel}" Text="{Binding Path=Comment, UpdateSourceTrigger=PropertyChanged}"></TextBox>

                    <ListView x:Name="PendingChangesListView" HorizontalAlignment="Stretch"
                              
                              listViewLayout:ListViewLayoutManager.Enabled="true"
                              
                              AttachedProperties:PreviewSpaceKeyDownSelectPendingChanges.Command="{Binding Path=SelectPendingChangesCommand}"
                              
                              AttachedProperties:PreviewReturnKeyDown.Command="{Binding Path=ViewPendingChangeCommand}"
                              AttachedProperties:PreviewReturnKeyDown.CommandParameter="{Binding ElementName=PendingChangesListView, Path=SelectedItems}"
                              
                              DataContext="{Binding Path=SelectedWorkspaceModel}" 
                              ItemsSource="{Binding Path=PendingChanges}">

                        <ListView.ItemContainerStyle>
                            <Style TargetType="ListViewItem">
                                <Setter Property="AttachedProperties:MouseDoubleClick.Command" Value="{Binding ElementName=PendingChangesListView, Path=DataContext.ViewPendingChangeCommand}"/>
                                <Setter Property="AttachedProperties:MouseDoubleClick.CommandParameter" Value="{Binding Converter={StaticResource SingleObjectToListConverter}}"/>
                            </Style>
                        </ListView.ItemContainerStyle>
                        <ListView.ContextMenu>
                            <ContextMenu d:DataContext="{d:DesignInstance PendingChangesModel:WorkspaceServiceModel}" x:Name="PendingChangesContextMenu">

                                <MenuItem Header="View" 
                                    Command="{Binding Path=ViewPendingChangeCommand}" 
                                    CommandParameter="{Binding ElementName=PendingChangesListView, Path=SelectedItems}" />

                                <Separator />
                                <MenuItem Header="Compare">
                                    
                                    <MenuItem Header="With workspace version..."
                                        Command="{Binding Path=CompareWithWorkspaceCommand}" 
                                        CommandParameter="{Binding ElementName=PendingChangesListView, Path=SelectedItems}" />

                                    <MenuItem Header="With latest version..."
                                        Command="{Binding Path=CompareWithWorkspaceCommand}" 
                                        CommandParameter="{Binding ElementName=PendingChangesListView, Path=SelectedItems}" />
                                    
                                </MenuItem>

                                <MenuItem Header="Undo"
                                    Command="{Binding Path=UndoPendingChangeCommand}" 
                                    CommandParameter="{Binding ElementName=PendingChangesListView, Path=SelectedItems}" />

                            </ContextMenu>
                        </ListView.ContextMenu>
                        <ListView.View>
                            <GridView>
                                <GridViewColumn Header="File" Width="200"
                                        listViewLayout:RangeColumn.MinWidth="150">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate DataType="PendingChangesModel:PendingChangeModel">
                                            <DockPanel>
                                                <CheckBox DockPanel.Dock="Left"
                                                          DataContext="{Binding}"
                                                          IsChecked="{Binding Path=IncludeChange}" 
                                                          Click="PendingChangesCheckboxClicked"/>
                                                <TextBlock Text="{Binding Path=Change.FileName, Mode=OneWay}" DockPanel.Dock="Right"/>
                                            </DockPanel>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>

                                <GridViewColumn Header="Change" Width="70"
                                        listViewLayout:RangeColumn.MinWidth="50">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate DataType="PendingChangesModel:PendingChangeModel">
                                            <TextBlock Text="{Binding Path=Change.ChangeTypeName, Mode=OneWay}"/>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>

                                <GridViewColumn Header="Folder" Width="200"
                                        listViewLayout:RangeColumn.MinWidth="200"
                                        listViewLayout:RangeColumn.IsFillColumn="true">
                                    
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate DataType="PendingChangesModel:PendingChangeModel">
                                            <TextBlock Text="{Binding Path=Change.LocalOrServerFolder, Mode=OneWay}"/>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                            </GridView>
                        </ListView.View>
                    </ListView>
                </DockPanel>
            </TabItem>
            <TabItem x:Name="WorkItemsTabItem" IsSelected="{Binding ElementName=WorkItemsRadioButton, Path=IsChecked}">
                <DockPanel>
                    <ToolBar DockPanel.Dock="Top">
                        <Button DataContext="{Binding Path=SelectedWorkspaceModel}" Command="{Binding Path=CheckInCommand}">
                            <StackPanel Orientation="Horizontal">
                                <Image Source="../../Resources/page_save.png" Width="16" Height="16" Margin="0,0,2,0"  />
                                <TextBlock>Check In</TextBlock>
                            </StackPanel>
                        </Button>
                        
                        <Separator />
                        
                        <TextBlock>Query:</TextBlock>
                        
                        <ComboBox Width="200" 
                                  DataContext="{Binding Path=SelectedWorkspaceModel}" 
                                  DisplayMemberPath="Formatted"
                                  ItemsSource="{Binding Path=PreviouslySelectedWorkItemQueries}"
                                  SelectedItem="{Binding Path=CurrentPreviouslySelectedWorkItemQuery}"
                                  
                                  IsEditable="False"></ComboBox>
                        
                        <Button DataContext="{Binding Path=SelectedWorkspaceModel}" Command="{Binding Path=ShowSelectWorkItemQueryCommand}">...</Button>

                        <Separator/>

                        <Button DataContext="{Binding Path=SelectedWorkspaceModel}" Command="{Binding Path=RefreshSelectedDefinitionWorkItemsCommand}">
                            <Image Source="..\..\Resources\arrow_refresh.png" Width="16" Height="16" />
                        </Button>
                    </ToolBar>

                    <ListView x:Name="WorkItemsListView" DockPanel.Dock="Bottom" 
                              
                              AttachedProperties:PreviewSpaceKeyDownSelectWorkItems.Command="{Binding Path=SelectWorkItemsCommand}"
                              
                              AttachedProperties:PreviewReturnKeyDown.Command="{Binding Path=ViewWorkItemCommand}"
                              AttachedProperties:PreviewReturnKeyDown.CommandParameter="{Binding ElementName=WorkItemsListView, Path=SelectedItems}"
                              
                              DataContext="{Binding Path=SelectedWorkspaceModel}" 
                              ItemsSource="{Binding Path=WorkItems}">
                        
                        <ListView.ItemContainerStyle>
                            <Style TargetType="ListViewItem">
                                <Setter Property="AttachedProperties:MouseDoubleClick.Command" Value="{Binding ElementName=WorkItemsListView, Path=DataContext.ViewWorkItemCommand}"/>
                                <Setter Property="AttachedProperties:MouseDoubleClick.CommandParameter" Value="{Binding Converter={StaticResource SingleObjectToListConverter}}"/>
                            </Style>
                        </ListView.ItemContainerStyle>
                        
                        <ListView.View>
                            <GridView>
                                <GridViewColumn>
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate DataType="PendingChangesModel:WorkItemModel">
                                            <CheckBox IsChecked="{Binding Path=IsSelected}"
                                                      DataContext="{Binding}"
                                                      Click="PendingChangeWorkItemCheckboxClicked" />
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>

                                <GridViewColumn Header="Check-in Action">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate DataType="PendingChangesModel:WorkItemModel">
                                            <ComboBox 
                                                Visibility="{Binding Path=IsSelected, Converter={StaticResource ResourceKey=BooleanToVisibilityConverter}}"
                                                ItemsSource="{Binding Source={StaticResource ResourceKey=workItemCheckinActions}}" 
                                                SelectedItem="{Binding Path=WorkItemCheckinAction}" />
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>

                                <GridViewColumn Header="ID">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate DataType="PendingChangesModel:WorkItemModel">
                                            <TextBlock Text="{Binding Path=WorkItem.Id, Mode=OneWay}"/>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>

                                <GridViewColumn Header="Type">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate DataType="PendingChangesModel:WorkItemModel">
                                            <TextBlock Text="{Binding Path=WorkItem.Type.Name, Mode=OneWay}"/>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>

                                <GridViewColumn Header="Title">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate DataType="PendingChangesModel:WorkItemModel">
                                            <TextBlock Text="{Binding Path=WorkItem.Title, Mode=OneWay}"/>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                            </GridView>
                        </ListView.View>
                    </ListView>
                </DockPanel>
            </TabItem>
            <TabItem x:Name="CheckInNotesTabItem"  IsSelected="{Binding ElementName=CheckInNotesRadioButton, Path=IsChecked}">
                <DockPanel>
                    <ToolBar DockPanel.Dock="Top">
                        <Button DataContext="{Binding Path=SelectedWorkspaceModel}" Command="{Binding Path=CheckInCommand}">
                            <StackPanel Orientation="Horizontal">
                                <Image Source="../../Resources/page_save.png" Width="16" Height="16" Margin="0,0,2,0"  />
                                <TextBlock>Check In</TextBlock>
                            </StackPanel>
                        </Button>
                    </ToolBar>
                    <ListView DataContext="{Binding Path=SelectedWorkspaceModel}" ItemsSource="{Binding Path=CheckinNotes}" DockPanel.Dock="Bottom" HorizontalContentAlignment="Stretch">
                        <ListView.ItemTemplate>
                            <DataTemplate DataType="PendingChangesModel:CheckinNoteModel">
                                <Expander Header="{Binding Path=CheckinNoteFieldDefinition.Name}" IsExpanded="True">
                                    <xctk:WatermarkTextBox Text="{Binding Path=Value, UpdateSourceTrigger=PropertyChanged}">
                                        <xctk:WatermarkTextBox.Style>
                                            <Style TargetType="xctk:WatermarkTextBox">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding Path=CheckinNoteFieldDefinition.Required}" Value="True">
                                                        <Setter Property="Watermark" Value="&lt;Required&gt;" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </xctk:WatermarkTextBox.Style>
                                    </xctk:WatermarkTextBox>
                                </Expander>
                            </DataTemplate>
                        </ListView.ItemTemplate>
                    </ListView>
                </DockPanel>
            </TabItem>
            <TabItem x:Name="PolicyWarningsTabItem" IsSelected="{Binding ElementName=PolicyWarningsRadioButton, Path=IsChecked}">
                <DockPanel Name="PolicyWarningsDataDockPanel">
                    <ToolBar DockPanel.Dock="Top">
                        <Button DataContext="{Binding Path=SelectedWorkspaceModel}" Command="{Binding Path=CheckInCommand}">
                            <StackPanel Orientation="Horizontal">
                                <Image Source="../../Resources/page_save.png" Width="16" Height="16" Margin="0,0,2,0"  />
                                <TextBlock>Check In</TextBlock>
                            </StackPanel>
                        </Button>
                    </ToolBar>
                    <ListView DataContext="{Binding Path=SelectedWorkspaceModel.CheckinEvaluationResult}" ItemsSource="{Binding Path=PolicyFailures}">
                        <ListView.View>
                            <GridView>
                                <GridViewColumn Header="Description">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate DataType="VersionControlClient:PolicyFailure">
                                            <TextBlock Text="{Binding Path=Message}"/>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                            </GridView>
                        </ListView.View>
                    </ListView>
                </DockPanel>
            </TabItem>
        </TabControl>
    </DockPanel>
</UserControl>
